{"version":3,"sources":["tree/msNgTree.js","tree/msNgTree2.js","treeGrid/msNgTreeGrid.js"],"names":[],"mappings":"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","file":"msngui.min.js","sourcesContent":["angular.module('ms.NgUi.tree',[])\n    .service('msTreeService',function() {\n        console.log('msTreeService');\n        var selectedElement = {};\n        var msTreeService={};\n        msTreeService.select = function(element, id) {\n            console.log(id);\n\n            if (selectedElement[id]) {\n                selectedElement[id].removeClass('selected');\n            }\n            selectedElement[id]=element;\n            selectedElement[id].addClass('selected');\n        }\n        return msTreeService;\n    })\n    .directive('msTree', function() {\n\n        return {\n            template: '<tree-node-element ng-repeat=\"node in tree\"></tree-node-element>',\n            replace: true,\n            transclude: true,\n            restrict: 'EA',\n            scope: {\n                treeId: \"=\",\n                tree: '=ngModel',\n                folderType:\"=\",\n                fileType:\"=\",\n                hovering: \"=\",//branch, leaf\n                classExpanded:  \"@\",\n                classCollapsed:  \"@\",\n                classFile: \"@\",\n                classParent: \"@\",\n                classLeaf: \"@\",\n                select : \"&onSelect\",\n                children : \"=\"\n            }\n        };\n    }).factory(\n).directive('treeNodeElement', function($compile, msTreeService) {\n        return {\n            restrict: 'E',\n            replace: true,\n            templateUrl: 'tree/tree.tpl.html',\n\n            link: function(scope, elm, attrs, controller) {\n                var options = {};\n                console.log(scope, elm, attrs);\n                options.folderType = attrs.folderType || \"folder\" ;\n                options.fileType = attrs.fileType || \"file\" ;\n                options.onSelect=attrs.onSelect;\n                options.treeId=attrs.treeId;\n                scope.classCollapsed=scope.$parent.classCollapsed;\n                scope.classFile=scope.$parent.classFile;\n                scope.classExpanded=scope.$parent.classExpanded;\n                scope.classParent=scope.$parent.classParent;\n                scope.classLeaf=scope.$parent.classLeaf;\n                scope.expanded = true;\n                var parentEl=\"\";\n                    (function(node) {\n                        elm.on('click', function (e) {\n                            var children = elm.find('li');\n                            if (children) {\n                                children.toggleClass('ng-hide');\n                            }\n                            if (node.type==options.fileType) {\n                                var elemLeaf = elm.find('span');\n                                msTreeService.select(elemLeaf, options.treeId);\n                            }\n                            e.stopPropagation();\n                        });\n                    })(scope.node);\n\n                scope.nodeClicked = function($event,node) {\n                    console.log(node);\n\n                    scope.expanded=!scope.expanded;\n                    if (node.type==options.fileType) {\n                        if (angular.isDefined(scope[options.onSelect])) {\n                            scope[options.onSelect](node);\n                        }\n\n                    }\n\n                    function toggleChildren(child) {\n                        angular.forEach(child.nodes, function(child) {\n                            child.hide=!child.hide;\n                            toggleChildren(child);\n                        });\n\n\n                    }\n                    toggleChildren(node);\n                };\n\n                scope.isFolder = function(node) {\n                    return node.type == options.folderType;\n                }\n                scope.isFile = function(node) {\n                    return node.type == options.fileType;\n                }\n                scope.isExpanded = function(node) {\n                    return scope.expanded;\n                }\n                scope.hasChildren = function(node) {\n                    return (node.nodes && node.nodes.length > 0);\n                }\n                scope.isClassExpanded = function() {\n                    return angular.isDefined(attrs.classExpanded);\n                }\n                scope.isClassCollapsed = function() {\n                    return angular.isDefined(options.classCollapsed);\n                }\n                scope.isClassFile = function() {\n                    return angular.isDefined(options.classFile);\n                }\n                scope.getClassExpanded = function() {\n\n                    return attrs.classExpanded;\n                }\n                scope.getClassCollapsed = function() {\n                    return attrs.classCollapsed;\n                }\n                scope.getClassFile = function() {\n                    return attrs.classFile;\n                }\n\n\n                scope.isLeaf = function(_data) {\n                    if (_data.nodes && _data.nodes.length == 0) {\n                        return true;\n                    }\n                    return false;\n                };\n\n                if (scope.node && scope.node.nodes &&  scope.node.nodes.length > 0) {\n                    var childNodeAttr=\"\";\n                    if (angular.isDefined(options.onSelect)) {\n                        childNodeAttr+=' data-on-select=\"' + options.onSelect + '\"';\n                    }\n                    if (angular.isDefined(options.treeId)) {\n                        childNodeAttr+=' data-tree-id=\"' + options.treeId + '\"';\n                    }\n\n                    if (angular.isDefined(attrs.folderType)) {\n                        childNodeAttr+=' data-folder-type=\"' + attrs.folderType + '\"';\n                    }\n                    if (angular.isDefined(attrs.fileType)) {\n                        childNodeAttr+=' data-file-type=\"' + attrs.fileType + '\"';\n                    }\n                    if (angular.isDefined(attrs.classExpanded)) {\n\n                        childNodeAttr+=' data-class-expanded=\"' + attrs.classExpanded + '\"';\n                    }\n                    if (angular.isDefined(attrs.classCollapsed)) {\n\n                        childNodeAttr+=' data-class-collapsed=\"' + attrs.classCollapsed + '\"';\n                    }\n                    if (angular.isDefined(attrs.classFile)) {\n\n                        childNodeAttr+=' data-class-file=\"' + attrs.classFile + '\"';\n                    }\n                    if (angular.isDefined(attrs.classParent)) {\n\n                        childNodeAttr+=' data-class-parent=\"' + attrs.classParent + '\"';\n                    }\n                    if (angular.isDefined(attrs.classLeaf)) {\n\n                        childNodeAttr+=' data-class-leaf=\"' + attrs.classLeaf + '\"';\n                    }\n\n                    var childNode = $compile('<ul><ms-tree ng-model=\"node.nodes\"' + childNodeAttr+'></ms-tree></ul>')(scope)\n\n                    elm.append(childNode);\n                }\n            }\n        };\n    });","angular.module('ms.NgUi.tree2',[])\n    .directive('tree2', function($compile) {\n    return {\n        replace: true,\n        transclude: true,\n        restrict: 'A',\n        scope: {\n            tree: '=ngModel',\n            folderType:\"=\",\n            fileType:\"=\",\n            hovering: \"=\",//branch, leaf\n            select : \"&onSelect\",\n            classCollapse : \"=\",\n            classExpand : \"=\",\n            classFile : \"=\",\n            classDirectory : \"=\"\n        },\n        controler: function(scope) {\n\n        },\n        link: function(scope, elem, attrs, controller) {\n            //get child node\n            var childNode = $compile('<ul><ms-node2 ng-model=\"node.nodes\"' + childNodeAttr+'></ms-node2></ul>')(scope)\n            elm.append(childNode);\n        }\n    };\n}).directive('msNode2',function() {\n    return {\n        link: function(scope, elem, attrs, controller) {\n            //get child node\n            var childNode = $compile('<ul><ms-node2 ng-model=\"node.nodes\"' + childNodeAttr+'></ms-node2></ul>')(scope)\n            elm.append(childNode);\n        }\n\n    }\n});","var TreeGridController = (function() {\n    var GridController = {};\n})();\nangular.module('ms.NgUi.treeGrid',[])\n    .directive('msTreeGrid', function() {\n        return {\n            //replace: true,\n            restrict: 'A',\n            scope: {\n                tree: '=ngModel'\n            },\n            controller: [\"$scope\",\"$compile\", \"$parse\", \"$timeout\", \"$templateCache\", function($scope, $compile, $parse, $timeout, $templateCache) {\n                this.$compile = $compile;\n                this.$parse = $parse;\n                this.$timeout = $timeout;\n                this.addRow = function() {\n                    console.log();\n                }\n                console.log(\"Ctrl\",this, $scope);\n            }],\n            template : function(templateElement, tAttrs) {\n                console.log('template', templateElement, tAttrs.fields);\n\n            },\n            link: function (scope, elm, attrs, controller) {\n                console.log(\"Ctrl 2\",controller, attrs.fields[0]);\n\n            }\n        };\n    }).directive('treeGridTh', function() {\n        return {\n            restrict: 'A',\n            require: \"^treeGrid\",\n            link: function (scope, elm, attrs, controller) {\n                console.log(\"Ctrl 2\",controller);\n\n            }\n        }\n    });"],"sourceRoot":"/source/"}